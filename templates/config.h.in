#pragma once

/* Config ------------------------------------------------------------------- */

#cmakedefine CLITHER_BENCHMARKS
#cmakedefine CLITHER_DEBUG
#cmakedefine CLITHER_GFX
#cmakedefine CLITHER_LOGGING
#cmakedefine CLITHER_MCD
#cmakedefine CLITHER_MEMORY_DEBUGGING
#cmakedefine CLITHER_POPCOUNT
#cmakedefine CLITHER_SERVER
#cmakedefine CLITHER_TESTS

#define CLITHER_SIZEOF_VOID_P ${CMAKE_SIZEOF_VOID_P}

#if defined(CLITHER_DEBUG)
#   define CLITHER_DEBUG_ASSERT
#endif

#if defined(CLITHER_GFX)
#   cmakedefine CLITHER_GFX_SDL
#   cmakedefine CLITHER_GFX_GLES2
#   cmakedefine CLITHER_GFX_VULKAN
#endif

#if defined(CLITHER_MEMORY_DEBUGGING)
#   define CLITHER_BACKTRACE_SIZE ${CLITHER_BACKTRACE_SIZE}
#   cmakedefine CLITHER_BACKTRACE
#   cmakedefine CLITHER_HEX_DUMP
#endif

#define CLITHER_THREADLOCAL ${CLITHER_THREADLOCAL}

#if defined(CLITHER_POPCOUNT)
#   undef CLITHER_POPCOUNT
#   define CLITHER_POPCOUNT ${CLITHER_POPCOUNT}
#endif

/* Assertions --------------------------------------------------------------- */

#if defined(__cplusplus)
#   define CLITHER_STATIC_ASSERT(condition) static_assert(condition)
#else
#   define CLITHER_STATIC_ASSERT(condition) ${CLITHER_STATIC_ASSERT}
#endif

#if defined(CLITHER_DEBUG_ASSERT)
#    undef CLITHER_DEBUG_ASSERT
#    define CLITHER_DEBUG_ASSERT assert
#    include <assert.h>
#else
#    define CLITHER_DEBUG_ASSERT(condition) ((void)0)
#endif

/* Version string ----------------------------------------------------------- */

#define STRINGIFY_(x) #x
#define STRINGIFY(x) STRINGIFY_(x)

#define CLITHER_VERSION_MAJOR ${PROJECT_VERSION_MAJOR}
#define CLITHER_VERSION_MINOR ${PROJECT_VERSION_MINOR}
#define CLITHER_VERSION_PATCH ${PROJECT_VERSION_PATCH}
#define CLITHER_VERSION_STR \
    STRINGIFY(CLITHER_VERSION_MAJOR) "." \
    STRINGIFY(CLITHER_VERSION_MINOR) "." \
    STRINGIFY(CLITHER_VERSION_PATCH)
#undef STRINGIFY
#undef STRINGIFY_

#define CLITHER_VERSION ( \
    (CLITHER_VERSION_MAJOR << 24) | \
    (CLITHER_VERSION_MINOR << 16) | \
    (CLITHER_VERSION_PATCH << 8) | \
    (/* release candidate */ 0))

/* printf formatting -------------------------------------------------------- */

#if defined(__GNUC__) || defined(__clang__)
#   define CLITHER_PRINTF_FORMAT(fmt, params) __attribute__((format(printf, fmt, params)))
#else
#   define CLITHER_PRINTF_FORMAT(fmt, params)
#endif

/* misc --------------------------------------------------------------------- */

#ifndef M_PI
#    define M_PI 3.14159265358979323846
#endif

